/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as OrgsOrgIdImport } from './routes/orgs.$orgId'
import { Route as OrgsOrgIdAdminImport } from './routes/orgs_.$orgId.admin'
import { Route as OrgsOrgIdContactsContactIdImport } from './routes/orgs_.$orgId.contacts.$contactId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrgsOrgIdRoute = OrgsOrgIdImport.update({
  id: '/orgs/$orgId',
  path: '/orgs/$orgId',
  getParentRoute: () => rootRoute,
} as any)

const OrgsOrgIdAdminRoute = OrgsOrgIdAdminImport.update({
  id: '/orgs_/$orgId/admin',
  path: '/orgs/$orgId/admin',
  getParentRoute: () => rootRoute,
} as any)

const OrgsOrgIdContactsContactIdRoute = OrgsOrgIdContactsContactIdImport.update(
  {
    id: '/orgs_/$orgId/contacts/$contactId',
    path: '/orgs/$orgId/contacts/$contactId',
    getParentRoute: () => rootRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/orgs/$orgId': {
      id: '/orgs/$orgId'
      path: '/orgs/$orgId'
      fullPath: '/orgs/$orgId'
      preLoaderRoute: typeof OrgsOrgIdImport
      parentRoute: typeof rootRoute
    }
    '/orgs_/$orgId/admin': {
      id: '/orgs_/$orgId/admin'
      path: '/orgs/$orgId/admin'
      fullPath: '/orgs/$orgId/admin'
      preLoaderRoute: typeof OrgsOrgIdAdminImport
      parentRoute: typeof rootRoute
    }
    '/orgs_/$orgId/contacts/$contactId': {
      id: '/orgs_/$orgId/contacts/$contactId'
      path: '/orgs/$orgId/contacts/$contactId'
      fullPath: '/orgs/$orgId/contacts/$contactId'
      preLoaderRoute: typeof OrgsOrgIdContactsContactIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/orgs/$orgId': typeof OrgsOrgIdRoute
  '/orgs/$orgId/admin': typeof OrgsOrgIdAdminRoute
  '/orgs/$orgId/contacts/$contactId': typeof OrgsOrgIdContactsContactIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/orgs/$orgId': typeof OrgsOrgIdRoute
  '/orgs/$orgId/admin': typeof OrgsOrgIdAdminRoute
  '/orgs/$orgId/contacts/$contactId': typeof OrgsOrgIdContactsContactIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/orgs/$orgId': typeof OrgsOrgIdRoute
  '/orgs_/$orgId/admin': typeof OrgsOrgIdAdminRoute
  '/orgs_/$orgId/contacts/$contactId': typeof OrgsOrgIdContactsContactIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/orgs/$orgId'
    | '/orgs/$orgId/admin'
    | '/orgs/$orgId/contacts/$contactId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/orgs/$orgId'
    | '/orgs/$orgId/admin'
    | '/orgs/$orgId/contacts/$contactId'
  id:
    | '__root__'
    | '/'
    | '/orgs/$orgId'
    | '/orgs_/$orgId/admin'
    | '/orgs_/$orgId/contacts/$contactId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrgsOrgIdRoute: typeof OrgsOrgIdRoute
  OrgsOrgIdAdminRoute: typeof OrgsOrgIdAdminRoute
  OrgsOrgIdContactsContactIdRoute: typeof OrgsOrgIdContactsContactIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrgsOrgIdRoute: OrgsOrgIdRoute,
  OrgsOrgIdAdminRoute: OrgsOrgIdAdminRoute,
  OrgsOrgIdContactsContactIdRoute: OrgsOrgIdContactsContactIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/orgs/$orgId",
        "/orgs_/$orgId/admin",
        "/orgs_/$orgId/contacts/$contactId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/orgs/$orgId": {
      "filePath": "orgs.$orgId.tsx"
    },
    "/orgs_/$orgId/admin": {
      "filePath": "orgs_.$orgId.admin.tsx"
    },
    "/orgs_/$orgId/contacts/$contactId": {
      "filePath": "orgs_.$orgId.contacts.$contactId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
